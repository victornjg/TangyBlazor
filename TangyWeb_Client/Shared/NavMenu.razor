@using Blazored.LocalStorage
@using TangyWeb_Client.ViewModels
@using TangyWeb_Client.Service.IService
@using Tangy_Common

@inject ICartService _cartService
@inject ISyncLocalStorageService _localStorageService

@implements IDisposable

<RadzenCard Class="w-100 py-1 px-2">
    <RadzenMenu>
        <RadzenMenuItem Text="Tangy" Path="/"/>
        <RadzenMenuItem Icon="shopping_cart" Text="@(GetCartCount())" Path="/cart" />

        <AuthorizeView>
            <Authorized>
                <p>Hello, @context.User.Identity.Name</p>
                <RadzenMenuItem class="float-right" Text="Logout" Path="/logout" />
            </Authorized>
            <NotAuthorized>
                <RadzenMenuItem class="float-end" Text="Register" Path="/register" />
                <RadzenMenuItem class="float-right" Text="Login" Path="/login" />
            </NotAuthorized>
        </AuthorizeView>
    </RadzenMenu>
</RadzenCard>

@code {
    protected override void OnInitialized()
    {
        _cartService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        _cartService.OnChange -= StateHasChanged;
    }

    private string GetCartCount()
    {
        var count = 0;
        var shoppingCartItems = _localStorageService.GetItem<IList<ShoppingCart>>(SD.ShoppingCart);
        if (shoppingCartItems != null)
            count = shoppingCartItems.Count;
        return count.ToString();
    }
}
