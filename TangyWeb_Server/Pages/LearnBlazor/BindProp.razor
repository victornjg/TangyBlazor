@page "/learnblazor/bindprop"

@using Tangy_Models.LearnBlazorModels

<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Playground</h3><hr />
        Active: <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive ? "checked" : null)" /><br />
        Price: <input type="number" @bind-value="Product.Price" @bind-value:event="oninput" /><br />
        Product Properties:
        <select @bind="selectedProp">
            @foreach (var prop in Product.ProductProperties)
            {
                <option value="@prop.Key">@prop.Key</option>
            }
        </select>
    </div>

    <div class="col-6 border p-3">
        <h3 class="text-primary">Product Summary</h3><hr />
        Name: @Product.Name<br />
        Active: @Product.IsActive<br />
        Price: @Product.Price<br />
        This Product is: @(@Product.IsActive ? "Active" : "Inactive")<br />
        Selected Property: @selectedProp<br />
        @if (!string.IsNullOrWhiteSpace(selectedProp)) 
        {
            <p>Property Value: @Product.ProductProperties.FirstOrDefault(p => p.Key == selectedProp).Value</p>
        }
    </div>

    <div class="col-12">
        <h2>Product Table</h2>
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Active</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in Products)
                {
                    <tr>
                        <td>
                            <input type="text" @bind-value="product.Name" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input type="number" @bind-value="product.Price" @bind-value:event="oninput" />
                        </td>
                        <td>
                            <input type="checkbox" @bind-value="product.IsActive" checked="@(product.IsActive ? "checked" : null)" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="col-12">
        <h2>Product Summary</h2>
        @foreach (var product in Products)
        {
            <p>@product.Name [@product.Price] is @(product.IsActive ? "Active" : "Inactive")</p>
        }
    </div>
</div>


@code {
    private string selectedProp = "";

    Demo_Product Product = new Demo_Product()
    {
        Id=1,
        Name="Rose Candle",
        IsActive=true,
        Price=10,
        ProductProperties = new List<Demo_ProductProp>()
        {
            new Demo_ProductProp { Id = 1, Key = "Color", Value="Black"},
            new Demo_ProductProp { Id = 2, Key = "Flavor", Value = "Rose Jasmine" },
            new Demo_ProductProp { Id = 3, Key = "Size", Value = "20oz"},
        }
    };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 25,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                new Demo_ProductProp { Id = 3, Key = "Color", Value = "Purple" }
            }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price = 30,
                ProductProperties = new()
                {
                    new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                    new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                    new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
                }
            });
    }
}
