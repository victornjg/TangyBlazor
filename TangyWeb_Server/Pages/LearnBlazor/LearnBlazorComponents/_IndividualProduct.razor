@using Tangy_Models.LearnBlazorModels

<div class="bg-light border m-1 col-5" @onclick="@(e => ProductClicked(e, Product.Name))">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    <input type="checkbox" @onchange="FavoriteChanged" @onclick:stopPropagation="true" /> Add to Favorite <br /><br />
    Name - @Product.Name<br />
    <p>RF from Parent - @FirstFragment @SecondFragment</p>
    Show Properties :
    <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive?"checked":null)" />

    @if (Product.IsActive)
    {
        @foreach (var prodProp in Product.ProductProperties)
        {
            <p>@prodProp.Key - @prodProp.Value</p>
        }
    }
    <br />
    <_EditDeleteButton IsActive="Product.IsActive"></_EditDeleteButton>
</div>

@code {
    [Parameter]
    public Demo_Product Product { get; set; }

    [Parameter]
    public EventCallback<bool> FavouriteCountUpdated { get; set; }

    [Parameter]
    public EventCallback<string> ProductSelected { get; set; }

    [Parameter]
    public RenderFragment FirstFragment { get; set; }

    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    public async Task FavoriteChanged(ChangeEventArgs e) 
    {
        await FavouriteCountUpdated.InvokeAsync((bool)e.Value);
    }

    public async Task ProductClicked(MouseEventArgs e, string productName) 
    {
        await ProductSelected.InvokeAsync(productName);
    }
}
