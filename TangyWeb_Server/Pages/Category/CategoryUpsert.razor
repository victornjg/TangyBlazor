@page "/category/create"
@page "/category/edit/{categoryId:long}"

@using Tangy_Models
@using Tangy_Business.Repository.IRepository
@inject ICategoryRepository _categoryRepo
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Category</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <div class="text-center">
                <img src="/images/loading.gif">
            </div>
        }
        else 
        {
            <EditForm Model="Category" OnValidSubmit="UpsertCategory">
                <DataAnnotationsValidator />
                @*<ValidationSummary/>*@
                <div class="form-group">
                    <label class="form-label">Name</label>
                    <InputText @bind-Value="Category.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Category.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="category" class="btn btn-secondary">Back to list</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {
    private CategoryDTO Category { get; set; } = new CategoryDTO();
    private string Title { get; set; } = "Create";
    private bool IsLoading { get; set; } = true;
    [Parameter]
    public long CategoryId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (CategoryId > 0)
        {
            Title = "Update";
            await Task.Run(LoadCategory);
        }
        else 
        {
            IsLoading = false;
        } 
    }

    private void LoadCategory()
    {
        Category = _categoryRepo.Get(CategoryId);
        IsLoading = false;
    }

    private void UpsertCategory() 
    {
        if (CategoryId > 0) 
        {
            _categoryRepo.Update(Category);
        }
        else
        {
            _categoryRepo.Create(Category);
        }
        _navigationManager.NavigateTo("category");
    }
}
